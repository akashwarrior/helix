// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String?
  email         String   @unique
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  emailVerified Boolean

  projects Project[]
  sessions Session[]
  accounts Account[]

  @@index([email])
  @@map("user")
}

model Project {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]

  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId])
}

enum Role {
  user
  assistant
}

model Message {
  id        String   @id @default(cuid())
  content   String
  role      Role
  createdAt DateTime @default(now())

  projectId String
  Project   Project @relation(fields: [projectId], references: [id])

  @@index([projectId])
}

// generated by better-auth
model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                   String    @id
  accountId            String
  providerId           String
  userId               String
  user                 User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken          String?
  idToken              String?
  accessTokenExpiresAt DateTime?
  scope                String?
  createdAt            DateTime
  updatedAt            DateTime

  refreshToken          String?
  refreshTokenExpiresAt DateTime?
  password              String?

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
